def conectar_db():
    try:
        connection = mysql.connector.connect(
            host="192.168.1.199",
            user="javier",
            password="valm2023",
            database="bd_valm_lite"
        )
        return connection
    except mysql.connector.Error as err:
        print(f"Error: {err}")
        return None

# Función para ejecutar las consultas (la misma que antes)
def ejecutar_consultas(connection, id_venta):
    # Consultas SQL proporcionadas
    queries = [
        f"""
       select a.id as 'Nº Fac',
       a.NumTarjeta as 'Nº Tarjeta', 
       substring(a.FVenta,1,10) as 'F. Venta',
       b.DNI as 'DNI',
       b.Nombres as 'Nombre',
       b.Apellidos as 'Apellido',
       b.Telefono1 as 'Teléfono',
       b.Direccion as 'Dirección',
       concat(FORMAT(a.ImporteVenta, 2, 'es_ES'),'$') as 'Importe Venta',
       concat(FORMAT(a.ImporteInicial, 2, 'es_ES'),'$') as 'Importe Inicial',
       a.NumCuotas as 'Nª Cuotas',
       IFNULL(e.NumcuotasPagadas, 0) AS 'Nº Cuotas Pagadas',
       IFNULL(concat(FORMAT(e.ImpCuotaspagadas, 2, 'es_ES'),'$'), 0) AS 'Imp Cuotas Pagadas',       
       concat(FORMAT(ImporteVenta - (ImporteInicial + IFNULL(e.ImpCuotaspagadas, 0)), 2, 'es_ES'),'$') as 'Imp Pendiente',
       concat(FORMAT(a.ImporteCuota, 2, 'es_ES'),'$') as 'Imp Cuota',
       a.FProxCuota as 'F. Proxima Cuota',
       c.Nombre as 'Periosidad de cobro',
       d.Nombre as 'Vendedor',
		  CASE a.Cerrado 
		      WHEN 1 THEN 'SI'
		      ELSE 'NO'
		  END AS 'Cerrado'		   
        from VentasEncabezados as a 
        inner join Clientes as b on a.IdCliente  = b.Id 
        inner join CompromisoDePagos as c on a.IdCompPago  = c.Id 
        inner join Usuarios as d on a.IdUsuario = d.Id 
        LEFT JOIN (
            SELECT
                IdVentaEncabezado,
                SUM(Abono) AS ImpCuotaspagadas,
                count(id) AS NumcuotasPagadas
            FROM Cuotas
            GROUP BY IdVentaEncabezado
        ) AS e ON a.id = e.IdVentaEncabezado
        where a.NumTarjeta ={id_venta};
        """,
        
        f"""
        select b.Id as IdProducto,
	    b.Nombre,
	     b.Descripcion,
	    a.cantidad as 'Cantidad'
        from VentasDetalles as a 
        inner join Productos  as b on a.IdProducto  = b.Id
        inner join VentasEncabezados as c on a.IdVentaEncabezado = c.Id 
        where c.NumTarjeta = {id_venta};
        """,
        
        f"""
        select  c.nombre as Cobrador ,
        a.NumCuota as 'Nº Cuota',
        SUBSTR(a.fechaPago,1,10) as 'F. Pago',
        concat(FORMAT(a.abono, 2, 'es_ES'),'$') AS Abono,
        concat(FORMAT(a.saldo, 2, 'es_ES'),'$') as Saldo,
		  CASE a.liquidado
		      WHEN 1 THEN 'SI'
		      ELSE 'NO'
		  END as 'Liquidado',        
        substring(fechaLiquidacion,1,10)as 'F. Liquidado'        
        from Cuotas as a
        inner join MediosDePagos as b on a.IdMedioDePago  = b.Id
        inner join Usuarios as c on a.IdUsuario = c.Id 
        inner join VentasEncabezados as d on a.IdVentaEncabezado  = d.Id 
        where d.NumTarjeta  = {id_venta};
        """
    ]
    
    results = []
    cursor = connection.cursor(dictionary=True)  
    for query in queries:
        cursor.execute(query)
        result = cursor.fetchall()
        if result:
            results.append(result)
    cursor.close()
    return results



